##### ABUNDANCES
seqtab.slim<-t(seqtab.nochim)
rownames(seqtab.slim)<-paste0("SV",seq(nrow(taxa)))
########## Write Out
write.table(taxa.slim,"Ecuador Tax Table new.txt")
write.table(samples.out,"Ecuador Metadata new.txt")
write.table(seqtab.slim,"Ecuador Abundance Table new.txt")
seqs <- getSequences(seqtab.slim)
names(seqs) <- seqs # This propagates to the tip labels of the tree
alignment <- AlignSeqs(DNAStringSet(seqs), anchor=NA)
library("DECIPHER")
alignment <- AlignSeqs(DNAStringSet(seqs), anchor=NA)
seqs <- getSequences(seqtab.nochim)
names(seqs) <- seqs # This propagates to the tip labels of the tree
alignment <- AlignSeqs(DNAStringSet(seqs), anchor=NA)
library("phanghorn")
install.packages("phanghorn")
BiocManager::install("phanghorn")
BiocManager::install("phangorn")
library("phangorn")
phang.align <- phyDat(as(alignment, "matrix"), type="DNA")
dm <- dist.ml(phang.align)
treeNJ <- NJ(dm) # Note, tip order != sequence order
fit = pml(treeNJ, data=phang.align)
fitGTR <- update(fit, k=4, inv=0.2)
fitGTR <- optim.pml(fitGTR, model="GTR", optInv=TRUE, optGamma=TRUE,
rearrangement = "stochastic", control = pml.control(trace = 0))
fitGTR <- update(fit, k=4, inv=0.2)
fitGTR <- optim.pml(fitGTR, model="GTR", optInv=TRUE, optGamma=TRUE,
rearrangement = "stochastic", control = pml.control(trace = 0))
# load packages
library("dada2")
install.packages("dada2")
install.packages("BiocManager")
BiocManager::install("dada2")
BiocManager::install("ShortRead")
BiocManager::install("Biostrings")
# load packages
library("dada2")
#######################################################################
###################### Taiwan Bd qPCR vs MiSeq ########################
#######################################################################
# Author: Lucy Goodyear (lucy.goodyear19@imperial.ac.uk)
# Version: 0.0.1
# clear workspace
rm(list=ls())
############# initial set up, library and data loading ################
# set wd if needed
setwd("Documents/CMEECourseWork/Project/Data-scripts/Taiwan_Vietnam/qPCR_vs_MiSeq")
# load packages
library(dplyr)
library(ggplot2)
library(scales)
# load required functions
source("qPCR_vs_MiSeq_functions.R")
# load filtered Taiwan data (swabs only)
TWdata <- read.csv("../Filtering/Taiwanswabsonly_plate2-4_filteredOTUtable.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
# load plate data
plates <- read.csv("../TW16_plate_data.csv",
stringsAsFactor=F,
header=F)
names(plates) <- c("barcode","sample","DNAqual","plate")
# load qPCR data
qpcr <- read.csv("../TW16_metadata.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
###################### qpcr data filtering #######################
# add column for Bd +ve/-ve to qpcr
qpcr$bd_results <- 0
for (i in (1:nrow(qpcr))){
if (qpcr$qPCR[i] > 0){
qpcr$bd_results[i] <- 1
}
}
# set as factor for plotting
qpcr$bd_results <- as.factor(qpcr$bd_results)
# subset qpcr results to include only id and bd_results
qpcr_Bd <- qpcr %>% select(miseq_id, bd_results)
names(qpcr_Bd)[1] = c("id")
##################### miseq data filtering ######################
# filter OTU table by Bd only and remove meta data
miseq_Bd <- TWdata[TWdata$species == "Batrachochytrium_dendrobatidis",]
miseq_Bd <- miseq_Bd[,23:ncol(miseq_Bd)]
################# qpcr/miseq data preparation ###################
# filter Bd only OTU table by samples with qpcr measurement
samples_miseq_qpcr <- miseq_Bd[,names(miseq_Bd) %in% c(qpcr_Bd$id)]
# create new dataframe with overlapping ids as first column
samples_Bd <- data.frame(names(samples_miseq_qpcr))
# add columns for total Bd count per sample and qpcr Bd boolean (1-0)
samples_Bd <- cbind(samples_Bd,
colSums(samples_miseq_qpcr),
qpcr_Bd[qpcr_Bd$id %in% names(samples_miseq_qpcr),2])
# set column names
names(samples_Bd) <- c("id", "miseq", "qpcr")
samples_Bd$qpcr <- as.factor(samples_Bd$qpcr) # for plotting purposes
# set wd if needed
setwd("Documents/CMEECourseWork/Project/Data-scripts/Taiwan_Vietnam/qPCR_vs_MiSeq")
# set wd if needed
setwd("Documents/CMEECourseWork/Project/Data-scripts/Taiwan_Vietnam/qPCR_vs_MiSeq")
library("cutadapt")
install.packages("cutadapt")
BiocManager::install("cutadapt")
library("cutadapt")
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/Plates/filtN_Phil/")
# load Phil's docs
abun_tab_phil <- read.csv("Ecuador Abundance Table new.txt")
# clear workspace
rm(list=ls())
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/Plates/filtN_Phil/")
# load Phil's docs
abun_tab_phil <- read.csv("Ecuador Abundance Table new.txt")
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/Plates/filtN_Phil/")
# load Phil's docs
abun_phil <- read.csv("Ecuador Abundance Table new.txt")
metadata_phil <- read.csv("Ecuador Metadata new.txt")
tax_phil <- read.csv("Ecuador Tax Table new.txt")
filt_phil <- read.csv("filtering_output8.csv")
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/HPC_results/Ecuador_results_lg/")
# load my docs
abun <- read.csv("Ecuador_Abundance_Table_lg.txt")
metadata <- read.csv("Ecuador_Metadata_lg.txt")
tax <- read.csv("Ecuador_Tax_Table_lg.txt")
filt <- read.csv("filtering_output8_lg.csv")
View(filt)
View(filt_phil)
identical(filt, filt_phil)
View(filt)
View(filt_phil)
View(filt_phil)
View(filt_phil)
compare(a1,filt_phil,allowAll=TRUE)
install.packages("compare")
compare(filt,filt_phil,allowAll=TRUE)
require(dplyr)
setdiff(filt,filt_phil)
anti_join(filt,filt_phil)
merge(filt, filt_phil)
filt_combined <- cbind(filt,filt_phil)
View(filt_combined)
filt[order(order(filt_phil)),]
View(filt)
require(plyr)
plyr::arrange(filt, X, desc(num))
plyr::arrange(filt, X, decreasing = TRUE)
# reorder data for comparison
filt <- plyr::arrange(filt, X, decreasing = TRUE)
filt_phil <- plyr::arrange(filt_phil, X, decreasing = TRUE)
setdiff(filt,filt_phil)
View(filt)
rownames(filt) <- c(X_lg, reads.in_lg, reads.out_lg)
e
colnames(filt) <- c(X_lg, reads.in_lg, reads.out_lg)
colnames(filt) <- c("X_lg", "reads.in_lg", "reads.out_lg")
setdiff(filt,filt_phil)
class(filt)
View(filt)
filt <- read.csv("filtering_output8_lg.csv")
# reorder data for comparison
filt <- plyr::arrange(filt, X, decreasing = TRUE)
filt_phil <- plyr::arrange(filt_phil, X, decreasing = TRUE)
setdiff(filt,filt_phil)
# reorder data for comparison
filt <- plyr::arrange(filt, X, decreasing = TRUE, as.Factor = FALSE)
filt_phil <- read.csv("filtering_output8.csv", as.Factor = FALSE)
filt <- read.csv("filtering_output8_lg.csv", as.Factor = FALSE)
# reorder data for comparison
filt <- plyr::arrange(filt, X, decreasing = TRUE)
filt_phil <- plyr::arrange(filt_phil, X, decreasing = TRUE)
filt_phil <- read.csv("filtering_output8.csv", stringsAsFactors = FALSE)
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/Plates/filtN_Phil/")
filt_phil <- read.csv("filtering_output8.csv", stringsAsFactors = FALSE)
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/HPC_results/Ecuador_results_lg/")
filt <- read.csv("filtering_output8_lg.csv", stringsAsFactors = FALSE)
filt <- plyr::arrange(filt, X, decreasing = TRUE)
filt_phil <- plyr::arrange(filt_phil, X, decreasing = TRUE)
setdiff(filt,filt_phil)
filt_diff <- setdiff(filt,filt_phil)
View(filt_diff)
filt_diff <- setdiff(filt,filt_phil)
filt_diff_lg <- filt %>%
filter(X == filt_diff[,1])
filt <- read.csv("filtering_output8_lg.csv", stringsAsFactors = FALSE)
filt_diff_lg <- filt %>%
filter(X == filt_diff[,1])
filt_diff[,1]
View(filt_diff)
filt_diff_lg <- filt %>%
filter(X == filt_diff[,1])
filt_diff_lg <- filt %>%
subset(X == filt_diff[,1])
filt_diff_lg <- subset(filt, X == filt_diff[,1])
filt_diff[,1]
View(filt)
filt_diff_lg <- subset(filt, X %in% filt_diff[,1])
View(filt_diff_lg)
filt_diff_phil <- subset(filt_phil, X %in% filt_diff[,1])
View(filt_diff)
rownames(filt_diff_lg) = c("X_lg", "reads.in_lg", "reads.out_lg")
row.names(filt_diff_lg) = c("X_lg", "reads.in_lg", "reads.out_lg")
colnames(filt_diff_lg) = c("X_lg", "reads.in_lg", "reads.out_lg")
filt_diff_phil <- subset(filt_phil, X %in% filt_diff[,1])
filt_diff_compare <- cbind(filt_diff_lg, filt_diff_phil)
filt_diff_phil <- subset(filt_phil, X %in% filt_diff[,1])
View(filt_diff_lg)
View(filt_phil)
View(filt)
View(filt_diff_lg)
View(filt_phil)
setdiff(filt_phil,filt)
View(filt_diff)
View(filt_diff)
filt_diff_l-to-p <- setdiff(filt,filt_phil)
filt_diff_lg <- subset(filt, X %in% filt_diff_l-to-p[,1])
colnames(filt_diff_lg) = c("X_lg", "reads.in_lg", "reads.out_lg")
filt_diff_p-to-l <- setdiff(filt_phil,filt)
filt_diff_phil <- subset(filt_phil, X %in% filt_diff_p-to-l[,1])
filt_diff_compare <- cbind(filt_diff_lg, filt_diff_phil)
filt_diff_p-to-l <- setdiff(filt_phil,filt)
filt_diff_l_to_p <- setdiff(filt,filt_phil)
filt_diff_lg <- subset(filt, X %in% filt_diff_l_to_p[,1])
colnames(filt_diff_lg) = c("X_lg", "reads.in_lg", "reads.out_lg")
filt_diff_p_to_l <- setdiff(filt_phil,filt)
filt_diff_phil <- subset(filt_phil, X %in% filt_diff_p_to_l[,1])
filt_diff_compare <- cbind(filt_diff_lg, filt_diff_phil)
View(filt_diff_compare)
filt <- plyr::arrange(filt, X, decreasing = TRUE)
filt_phil <- plyr::arrange(filt_phil, X, decreasing = TRUE)
filt_diff_l_to_p <- setdiff(filt,filt_phil)
filt_diff_lg <- subset(filt, X %in% filt_diff_l_to_p[,1])
colnames(filt_diff_lg) = c("X_lg", "reads.in_lg", "reads.out_lg")
filt_diff_p_to_l <- setdiff(filt_phil,filt)
filt_diff_phil <- subset(filt_phil, X %in% filt_diff_p_to_l[,1])
filt_diff_compare <- cbind(filt_diff_lg, filt_diff_phil)
View(filt_diff_compare)
compare <- function(file1, file2){
# reorder data for comparison
file1 <- plyr::arrange(file1, file1[,1], decreasing = TRUE)
file2 <- plyr::arrange(file2, file2[,1], decreasing = TRUE)
# generate differences between file1 and file2
differences_1to2 <- setdiff(file1, file2)
# subset file1 by differences
file1_diff <- subset(file1, file1[,1] %in% differences_1to2[,1])
# generate differences bewteen file2 and file1
differences_2to1 <- setdiff(file2, file1)
# subset file2 by differences
file2_diff <- subset(file2, file2[,1] %in% differences_2to1[,1])
# create combined dataframe with both differences
df_compare <- cbind(file1_diff, file2_diff)
return(df_compare)
}
compare(filt, filt_phil)
filt_diff_compare_1 <- compare(filt, filt_phil)
View(filt_diff_compare_1)
View(filt_diff_compare)
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/HPC_results/Ecuador_results_lg/")
# load my docs
abun_lg <- read.csv("Ecuador_Abundance_Table_lg.txt")
metadata_lg <- read.csv("Ecuador_Metadata_lg.txt")
tax_lg <- read.csv("Ecuador_Tax_Table_lg.txt")
filt_lg <- read.csv("filtering_output8_lg.csv", stringsAsFactors = FALSE)
abun_compare <- compare(abun_lg, abun_phil)
View(abun_lg)
View(tax)
View(tax_lg)
View(tax)
tax_compare <- compare(tax_lg, tax_phil)
tax_phil <- read.csv("Ecuador Tax Table new.txt", stringsAsFactors = FALSE)
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/Plates/filtN_Phil/")
tax_phil <- read.csv("Ecuador Tax Table new.txt", stringsAsFactors = FALSE)
tax_lg <- read.csv("Ecuador_Tax_Table_lg.txt", stringsAsFactors = FALSE)
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/HPC_results/Ecuador_results_lg/")
tax_lg <- read.csv("Ecuador_Tax_Table_lg.txt", stringsAsFactors = FALSE)
tax_compare <- compare(tax_lg, tax_phil)
View(tax_compare)
metadata_compare <- compare(metadata_lg, metadata_phil)
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/Plates/filtN_Phil/")
# load Phil's docs
abun_phil <- read.csv("Ecuador Abundance Table new.txt", stringsAsFactors = FALSE)
metadata_phil <- read.csv("Ecuador Metadata new.txt", stringsAsFactors = FALSE)
tax_phil <- read.csv("Ecuador Tax Table new.txt", stringsAsFactors = FALSE)
filt_phil <- read.csv("filtering_output8.csv", stringsAsFactors = FALSE)
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/HPC_results/Ecuador_results_lg/")
# load my docs
abun_lg <- read.csv("Ecuador_Abundance_Table_lg.txt", stringsAsFactors = FALSE)
metadata_lg <- read.csv("Ecuador_Metadata_lg.txt", stringsAsFactors = FALSE)
tax_lg <- read.csv("Ecuador_Tax_Table_lg.txt", stringsAsFactors = FALSE)
filt_lg <- read.csv("filtering_output8_lg.csv", stringsAsFactors = FALSE)
metadata_compare <- compare(metadata_lg, metadata_phil)
View(metadata_compare)
View(metadata_lg)
View(metadata_phil)
View(metadata_phil)
View(metadata_lg)
View(metadata_compare)
View(metadata)
View(metadata_compare)
View(metadata_lg)
compare <- function(file1, file2){
# reorder data for comparison
file1 <- as.character(file1[,1])
file2 <- as.character(file2[,1])
file1 <- plyr::arrange(file1, file1[,1], decreasing = TRUE)
file2 <- plyr::arrange(file2, file2[,1], decreasing = TRUE)
# generate differences between file1 and file2
differences_1to2 <- setdiff(file1, file2)
# subset file1 by differences
file1_diff <- subset(file1, file1[,1] %in% differences_1to2[,1])
# generate differences bewteen file2 and file1
differences_2to1 <- setdiff(file2, file1)
# subset file2 by differences
file2_diff <- subset(file2, file2[,1] %in% differences_2to1[,1])
# create combined dataframe with both differences
df_compare <- cbind(file1_diff, file2_diff)
return(df_compare)
}
metadata_compare <- compare(metadata_lg, metadata_phil)
compare <- function(file1, file2){
# reorder data for comparison
file1 <- as.numeric(file1[,1])
file2 <- as.numeric(file2[,1])
file1 <- plyr::arrange(file1, file1[,1], decreasing = TRUE)
file2 <- plyr::arrange(file2, file2[,1], decreasing = TRUE)
# generate differences between file1 and file2
differences_1to2 <- setdiff(file1, file2)
# subset file1 by differences
file1_diff <- subset(file1, file1[,1] %in% differences_1to2[,1])
# generate differences bewteen file2 and file1
differences_2to1 <- setdiff(file2, file1)
# subset file2 by differences
file2_diff <- subset(file2, file2[,1] %in% differences_2to1[,1])
# create combined dataframe with both differences
df_compare <- cbind(file1_diff, file2_diff)
return(df_compare)
}
metadata_compare <- compare(metadata_lg, metadata_phil)
compare <- function(file1, file2){
# reorder data for comparison
file1 <- as.character(file1[,1])
file2 <- as.character(file2[,1])
file1 <- plyr::arrange(file1, file1[,1], decreasing = TRUE)
file2 <- plyr::arrange(file2, file2[,1], decreasing = TRUE)
# generate differences between file1 and file2
differences_1to2 <- setdiff(file1, file2)
# subset file1 by differences
file1_diff <- subset(file1, file1[,1] %in% differences_1to2[,1])
# generate differences bewteen file2 and file1
differences_2to1 <- setdiff(file2, file1)
# subset file2 by differences
file2_diff <- subset(file2, file2[,1] %in% differences_2to1[,1])
# create combined dataframe with both differences
df_compare <- cbind(file1_diff, file2_diff)
return(df_compare)
}
metadata_compare <- compare(metadata_lg, metadata_phil)
compare <- function(file1, file2){
# reorder data for comparison
file1 <- as.character(file1[,1])
file2 <- as.character(file2[,1])
file1 <- plyr::arrange(file1, file1[,1])
file2 <- plyr::arrange(file2, file2[,1])
# generate differences between file1 and file2
differences_1to2 <- setdiff(file1, file2)
# subset file1 by differences
file1_diff <- subset(file1, file1[,1] %in% differences_1to2[,1])
# generate differences bewteen file2 and file1
differences_2to1 <- setdiff(file2, file1)
# subset file2 by differences
file2_diff <- subset(file2, file2[,1] %in% differences_2to1[,1])
# create combined dataframe with both differences
df_compare <- cbind(file1_diff, file2_diff)
return(df_compare)
}
metadata_compare <- compare(metadata_lg, metadata_phil)
class(metadata_lg)
metadata_lg[,1]
class(metadata_lg[,1])
plyr::arrange(file1, file1[,1]
)
plyr::arrange(metadata_lg, metadata_lg[,1])
View(metadata_lg)
metadata_lg <- read.csv("Ecuador_Metadata_lg.txt", stringsAsFactors = FALSE, headers = FALSE)
metadata_lg <- read.csv("Ecuador_Metadata_lg.txt", stringsAsFactors = FALSE, header = FALSE)
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/Plates/filtN_Phil/")
metadata_phil <- read.csv("Ecuador Metadata new.txt", stringsAsFactors = FALSE, header = FALSE)
# set working directory
setwd("~/Documents/CMEECourseWork/Project/Ecuador_pipelineITS/HPC_results/Ecuador_results_lg/")
metadata_compare <- compare(metadata_lg, metadata_phil)
compare <- function(file1, file2){
# reorder data for comparison
file1 <- as.character(file1[,1])
file2 <- as.character(file2[,1])
file1 <- plyr::arrange(file1, file1[,1])
file2 <- plyr::arrange(file2, file2[,1])
# generate differences between file1 and file2
differences_1to2 <- setdiff(file1, file2)
# subset file1 by differences
file1_diff <- subset(file1, file1[,1] %in% differences_1to2[,1])
# generate differences bewteen file2 and file1
differences_2to1 <- setdiff(file2, file1)
# subset file2 by differences
file2_diff <- subset(file2, file2[,1] %in% differences_2to1[,1])
# create combined dataframe with both differences
df_compare <- cbind(file1_diff, file2_diff)
return(df_compare)
}
metadata_compare <- compare(metadata_lg, metadata_phil)
View(metadata_lg)
View(metadata_phil)
View(metadata_lg)
Sample = c(1,2,3,4,4,3,2,6,7,1)
for (i in duplicated(Sample)) {
Sample[i] == paste0(c(Sample[i], "a"))
}
Sample[1]
for (i in duplicated(Sample)) {
Sample[i] = paste0(c(Sample[i], "a"))
}
paste0(c(Sample[1], "a"))
Sample[1] <- paste0(c(Sample[1], "a"))
for (i in duplicated(Sample)) {
Sample[i] = paste0(Sample[i], "a")
}
Sample = c(1,2,3,4,4,3,2,6,7,1)
for (i in duplicated(Sample)) {
Sample[i] = paste0(Sample[i], "a")
}
Sample
duplicated(Sample)
duplicated(Sample)[1]
Sample = c(1,2,3,4,4,3,2,6,7,1)
for (i in 1:length(duplicated(Sample))) {
if (duplicated(Sample)[i] == TRUE){
Sample[i] = paste0(Sample[i], "a")
}
}
Sample
Sample = data.frame(1,2,3,2,6,7,8)
View(Sample)
Sample[2,] = c(2,3,1,3,6,7,8)
Sample
Sample = c(1,2,3,4,4,3,2,6,7,1)
Sample = as.data.frame(1,2,3,4,4,3,2,6,7,1)
Sample = as.data.frame(1,2,3,4,4,3,2,6,7,1)
Sample
Sample = as.data.frame(c(1,2,3,4,4,3,2,6,7,1))
Sample = as.data.frame(c(1,2,3,4,4,3,2,6,7,1))
for (i in 1:length(duplicated(Sample))) {
if (duplicated(Sample)[i] == TRUE){
Sample[i] = paste0(Sample[i], "a")
}
}
Sample
Sample = as.data.frame(c(1,2,3,4,4,3,2,6,7,1))
for (i in 1:length(duplicated(Sample))) {
if (duplicated(Sample)[i,1] == TRUE){
Sample[i] = paste0(Sample[i,1], "a")
}
}
Sample
Sample = as.data.frame(c(1,2,3,4,4,3,2,6,7,1))
for (i in 1:length(duplicated(Sample))) {
if (duplicated(Sample)[i,1] == TRUE){
Sample[i,1] = paste0(Sample[i,1], "a")
}
}
for (i in 1:length(duplicated(Sample))) {
if (duplicated(Sample)[i] == TRUE){
Sample[i] = paste0(Sample[i], "a")
}
}
Sample = as.data.frame(c(1,2,3,4,4,3,2,6,7,1))
for (i in 1:nrow(duplicated(Sample))) {
if (duplicated(Sample)[i,1] == TRUE){
Sample[i,1] = paste0(Sample[i,1], "a")
}
}
Samaple
Sample
Sample[1,1]
duplicated(Sample)
1:nrow(duplicated(Sample)
)
View(Sample)
nrow(duplicated(Sample))
Sample = as.data.frame(c(1,2,3,4,4,3,2,6,7,1))
for (i in 1:nrow(Sample)) {
if (duplicated(Sample)[i,1] == TRUE){
Sample[i,1] = paste0(Sample[i,1], "a")
}
}
nrow(Sample)
Sample = as.data.frame(c(1,2,3,4,4,3,2,6,7,1))
for (i in 1:nrow(Sample)) {
if (duplicated(Sample)[i] == TRUE){
Sample[i,1] = paste0(Sample[i,1], "a")
}
}
Sample
