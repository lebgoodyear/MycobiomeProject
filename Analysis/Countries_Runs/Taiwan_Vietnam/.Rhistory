# subset all info and save as separate dataframe
info <- TWdata[,1:22]
# subset samples only and save as matrix
samp_only <- as.matrix(TWdata[,23:ncol(TWdata)])
# add OTU ids as row names
rownames(samp_only) <- TWdata$otuid
# subset taxa only and save as matrix
tax_data <- as.matrix(TWdata[,10:16])
# add OTU ids as row names
rownames(tax_data) <- TWdata$otuid
# convert sample and taxa matrices into the tables needed
# to create a phyloseq object
OTU <- otu_table(samp_only, taxa_are_rows = TRUE)
TAX <- tax_table(tax_data)
Sample <- sample_data(metadata)
# combine tables into one phyloseq object
physeq <- phyloseq(OTU,TAX, Sample)
############## Create phyloseq object of phyla subsetted data ##########
# create another subset with certain phyla removed
# remove all OTUs of the followng phlya:
# - "" (blank)
# - "environmental samples"
# - "Fungi_phy_Incertae_sedis"
phy_fil <- TWdata %>%
filter(phylum != ""
& phylum != "environmental samples"
& phylum != "Fungi_phy_Incertae_sedis")
# subset samples only and save as matrix
phy_fil_samp <- as.matrix(phy_fil[,23:ncol(phy_fil)])
# add OTU ids as row names
rownames(phy_fil_samp) <- phy_fil$otuid
# subset all info and save as separate dataframe
info_fil <- phy_fil[,1:22]
# subset taxa only and save as matrix
phy_fil_tax <- as.matrix(phy_fil[,10:16])
# add OTU ids as row names
rownames(phy_fil_tax) <- phy_fil$otuid
# check to see if there samples with no OTUs
# sum all read columns and save as vector
#sampsum <- colSums(phy_fil_samp)
# filter by sums not equal to zero
#phy_fil_samp1 <- phy_fil_samp[,sampsum != 0]
# filter metdata by IDs present in current MiSeq run
metadata_fil <- metadata[rownames(metadata) %in% colnames(phy_fil_samp),]
# convert sample and taxa matrices into the tables needed
# to create a phyloseq object
OTU_fil <- otu_table(phy_fil_samp, taxa_are_rows = TRUE)
TAX_fil <- tax_table(phy_fil_tax)
Sample_fil <- sample_data(metadata_fil)
# combine tables into one phyloseq object
physeq_fil <- phyloseq(OTU_fil,TAX_fil, Sample_fil)
############################# Filter data ###############################
#plot_bar(physeq_fil, fill = "phylum")
wh0 = genefilter_sample(physeq_fil, filterfun_sample(function(x) x > 1), A=0.05*nsamples(physeq_fil))
TW_physeq_filtered = prune_taxa(wh0, physeq_fil)
#phylum.sum = tapply(taxa_sums(TW_physeq_filtered), tax_table(TW_physeq_filtered)[, "Phylum"], sum, na.rm=TRUE)
#top5phyla = names(sort(phylum.sum, TRUE))[1:5]
#TW_physeq_filtered = prune_taxa((tax_table(TW_physeq_filtered)[, "Phylum"] %in% top5phyla), TW_physeq_filtered)
######################## Plot alpha-diversity ############################
# estimate value for alpha for each sample
est_alpha_shannon <- estimate_richness(physeq_fil, split = TRUE, measures = "Shannon")
Sample_fil$alpha <- est_alpha_shannon[,1]
# plot box plot
ggplot(Sample_fil, aes(x = Lifestage, y = alpha, colour = Bd)) +
geom_boxplot()
# subset Sample_fil twice to include only shannon diversity,
# split by lifestage
Sample_fil_alpha_adult <- Sample_fil %>% select(alpha if Lifestage == "adult")
# plot box plot
ggplot(Sample_fil, aes(x = Lifestage, y = alpha, colour = Bd)) +
geom_boxplot()
Sample_fil_alpha_adult <- Sample_fil %>% filter(Lifestage == "adult")
%>% select(alpha)
# subset Sample_fil twice to include only shannon diversity,
# split by lifestage
Sample_fil_alpha_adult <- Sample_fil %>% filter(Lifestage == "adult") %>% select(alpha)
# subset Sample_fil twice to include only shannon diversity,
# split by lifestage
Sample_fil_alpha_adult <- Sample_fil %>% filter(Lifestage == "adult")
Sample_fil %>% filter(Lifestage == "adult")
Sample_fil_alpha_adult <- Sample_fil_alpha_adult %>% select(alpha)
View(Sample_fil_alpha_adult)
Sample_fil_alpha_tad <- Sample_fil %>% filter(Lifestage == "tadpole")
Sample_fil_alpha_tad <- Sample_fil_alpha_tad %>% select(alpha)
# perform Mann-Whitney test
wilcox.test(Sample_fil_alpha_adult, Sample_fil_alpha_tad)
class(Sample_fil_alpha_adult)
type(Sample_fil_alpha_adult)
Sample_fil_alpha_adult <- as.vector(Sample_fil_alpha_adult %>% select(alpha))
Sample_fil_alpha_tad <- as.vector(Sample_fil_alpha_tad %>% select(alpha))
# perform Mann-Whitney test
wilcox.test(Sample_fil_alpha_adult, Sample_fil_alpha_tad)
class(Sample_fil_alpha_adult)
Sample_fil_alpha_adult <- as.vector(Sample_fil_alpha_adult %>% select(alpha))
Sample_fil_alpha_adult <- as.numeric(Sample_fil_alpha_adult %>% select(alpha))
Sample_fil_alpha_tad <- Sample_fil_alpha_tad %>% select(alpha)
View(Sample_fil_alpha_tad)
# perform Mann-Whitney U test
wilcox.test(Sample_fil_alpha_adult, Sample_fil_alpha_tad)
type(Sample_fil_alpha_adult[1])
class(Sample_fil_alpha_adult[1])
class(Sample_fil_alpha_adult[,1])
# recombine into dataframe
lifestage_wilcox <- cbind(Sample_fil_alpha_adult, Sample_fil_alpha_tadpole)
# recombine into dataframe
lifestage_wilcox <- cbind(Sample_fil_alpha_adult, Sample_fil_alpha_tad)
Sample_fil_alpha <- Sample_fil %>% select(alpha, Lifestage)
# perform Mann-Whitney U test
wilcox.test(alpha ~ Lifestage, data = Sample_fil_alpha)
Sample_fil_alpha <- Sample_fil %>% select(alpha, Lifestage)
View(Sample_fil_alpha)
Sample_fil_alpha <- as.data.frame(Sample_fil %>% select(alpha, Lifestage))
View(Sample_fil_alpha)
metadata_fil_alpha <- as.data.frame(metadata_fil %>% select(alpha, Lifestage))
metadata_fil$alpha <- est_alpha_shannon[,1]
metadata_fil_alpha <- as.data.frame(metadata_fil %>% select(alpha, Lifestage))
# perform Mann-Whitney U test
wilcox.test(alpha ~ Lifestage, data = Sample_fil_alpha)
# perform Mann-Whitney U test
wilcox.test(alpha ~ Lifestage, data = metadata_fil_alpha)
View(metadata_fil_alpha)
# plot box plot
ggplot(metadata_fil, aes(x = Lifestage, y = alpha)) +
geom_boxplot()
ggplot(metadata_fil, aes(x = Lifestage, y = alpha)) +
geom_boxplot() +
scale_x_discrete(labels=c("Adult (n=", "Tadpole (n="))
length(metadata_fil_alpha$Lifestage == adult)
length(metadata_fil_alpha$Lifestage == Adult)
length(metadata_fil_alpha$Lifestage == "adult"")
length(metadata_fil_alpha$Lifestage == "adult")
length(metadata_fil_alpha$Lifestage == "adult")
length(metadata_fil_alpha$Lifestage == "tadpole")
length(metadata_fil_alpha)
nrows(metadata_fil_alpha)
nrow(metadata_fil_alpha)
nrow(metadata_fil_alpha$Lifestage == "tadpole")
count(metadata_fil_alpha$Lifestage == "tadpole")
table(metadata_fil_alpha$Lifestage)
table(metadata_fil_alpha$Lifestage)[1]
table(metadata_fil_alpha$Lifestage)[1,1]
table(metadata_fil_alpha$Lifestage)[1
]
ggplot(metadata_fil,
aes(x = Lifestage, y = alpha),
ylab = "Shannon Alpha Diversity") +
geom_boxplot() +
scale_x_discrete(labels=c(paste("Adult (n=", table(metadata_fil_alpha$Lifestage)[1], ")"),
paste("Tadpole (n=", table(metadata_fil_alpha$Lifestage)[1], ")")))
ggplot(metadata_fil,
aes(x = Lifestage, y = alpha),
ylab = "Shannon Alpha Diversity") +
geom_boxplot() +
scale_x_discrete(labels=c(paste("Adult (n=", table(metadata_fil_alpha$Lifestage)[1], ")"),
paste("Tadpole (n=", table(metadata_fil_alpha$Lifestage)[2], ")")))
ggplot(metadata_fil,
aes(x = Lifestage, y = alpha),
ylab = "Shannon Alpha Diversity",
title = "Shannon Alpha Diversity for Adults vs Tadploes") +
geom_boxplot() +
scale_x_discrete(labels=c(paste("Adult (n=", table(metadata_fil_alpha$Lifestage)[1], ")"),
paste("Tadpole (n=", table(metadata_fil_alpha$Lifestage)[2], ")")))
ggplot(metadata_fil,
aes(x = Lifestage, y = alpha)) +
labs(y = "Shannon Alpha Diversity") +
geom_boxplot() +
scale_x_discrete(labels=c(paste("Adult (n=", table(metadata_fil_alpha$Lifestage)[1], ")"),
paste("Tadpole (n=", table(metadata_fil_alpha$Lifestage)[2], ")")))
View(metadata_fil_alpha)
##############################################################################
###################### Prelimary Taiwan Data Analysis ########################
##############################################################################
# Author: Lucy Goodyear (lucy.goodyear19@imperial.ac.uk)
# Version: 0.0.1
# clear workspace
rm(list=ls())
################################## Set up ####################################
# set wd if needed
setwd("Documents/CMEECourseWork/Project/Data-scripts/Taiwan_Vietnam/")
# load packages
library(dplyr)
library(phyloseq)
library(ggplot2)
# load filtered Taiwan data (swbas only)
TWdata <- read.csv("Filtering/Taiwanswabsonly_plate2-4_filteredOTUtable.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
# load plate data
plates <- read.csv("TW16_plate_data.csv",
stringsAsFactor=F,
header=F)
names(plates) <- c("barcode","sample","DNAqual","plate")
# load metadata
metadata <- read.csv("TW16_metadata.csv",
stringsAsFactor=F,
header=T)
rownames(metadata) <- metadata$miseq_id
metadata <- metadata[,-1]
# add column for Bd +ve/-ve to metadata
metadata$Bd <- 0
for (i in (1:nrow(metadata))){
if (metadata$qPCR[i] > 0){
metadata$Bd[i] <- 1
}
}
# set as factor for plotting
metadata$Bd <- as.factor(metadata$Bd)
###################### Create phyloseq object of all data #####################
# subset all info and save as separate dataframe
info <- TWdata[,1:22]
# subset samples only and save as matrix
samp_only <- as.matrix(TWdata[,23:ncol(TWdata)])
# add OTU ids as row names
rownames(samp_only) <- TWdata$otuid
# subset taxa only and save as matrix
tax_data <- as.matrix(TWdata[,10:16])
# add OTU ids as row names
rownames(tax_data) <- TWdata$otuid
# convert sample and taxa matrices into the tables needed
# to create a phyloseq object
OTU <- otu_table(samp_only, taxa_are_rows = TRUE)
TAX <- tax_table(tax_data)
Sample <- sample_data(metadata)
# combine tables into one phyloseq object
physeq <- phyloseq(OTU,TAX, Sample)
############## Create phyloseq object of phyla subsetted data ##########
# create another subset with certain phyla removed
# remove all OTUs of the followng phlya:
# - "" (blank)
# - "environmental samples"
# - "Fungi_phy_Incertae_sedis"
phy_fil <- TWdata %>%
filter(phylum != ""
& phylum != "environmental samples"
& phylum != "Fungi_phy_Incertae_sedis")
# subset samples only and save as matrix
phy_fil_samp <- as.matrix(phy_fil[,23:ncol(phy_fil)])
# add OTU ids as row names
rownames(phy_fil_samp) <- phy_fil$otuid
# subset all info and save as separate dataframe
info_fil <- phy_fil[,1:22]
# subset taxa only and save as matrix
phy_fil_tax <- as.matrix(phy_fil[,10:16])
# add OTU ids as row names
rownames(phy_fil_tax) <- phy_fil$otuid
# check to see if there samples with no OTUs
# sum all read columns and save as vector
#sampsum <- colSums(phy_fil_samp)
# filter by sums not equal to zero
#phy_fil_samp1 <- phy_fil_samp[,sampsum != 0]
# filter metdata by IDs present in current MiSeq run
metadata_fil <- metadata[rownames(metadata) %in% colnames(phy_fil_samp),]
# convert sample and taxa matrices into the tables needed
# to create a phyloseq object
OTU_fil <- otu_table(phy_fil_samp, taxa_are_rows = TRUE)
TAX_fil <- tax_table(phy_fil_tax)
Sample_fil <- sample_data(metadata_fil)
# combine tables into one phyloseq object
physeq_fil <- phyloseq(OTU_fil,TAX_fil, Sample_fil)
############################# Filter data ###############################
#plot_bar(physeq_fil, fill = "phylum")
wh0 = genefilter_sample(physeq_fil, filterfun_sample(function(x) x > 1), A=0.05*nsamples(physeq_fil))
TW_physeq_filtered = prune_taxa(wh0, physeq_fil)
#phylum.sum = tapply(taxa_sums(TW_physeq_filtered), tax_table(TW_physeq_filtered)[, "Phylum"], sum, na.rm=TRUE)
#top5phyla = names(sort(phylum.sum, TRUE))[1:5]
#TW_physeq_filtered = prune_taxa((tax_table(TW_physeq_filtered)[, "Phylum"] %in% top5phyla), TW_physeq_filtered)
######################## Plot alpha-diversity ############################
# estimate value for alpha for each sample
est_alpha_shannon <- estimate_richness(physeq_fil, split = TRUE, measures = "Shannon")
metadata_fil$alpha <- est_alpha_shannon[,1]
########## Compare pair-wise and plot with ggplot
##### Lifestage
# subset Sample_fil twice to include only shannon diversity,
# split by lifestage
metadata_fil_alpha <- as.data.frame(metadata_fil %>% select(alpha, Lifestage))
ggplot(metadata_fil,
aes(x = Lifestage, y = alpha)) +
labs(y = "Shannon Alpha Diversity") +
geom_boxplot() +
scale_x_discrete(labels=c(paste("Adult (n=", table(metadata_fil_alpha$Lifestage)[1], ")"),
paste("Tadpole (n=", table(metadata_fil_alpha$Lifestage)[2], ")")))
p_lifestage <- ggplot(metadata_fil,
aes(x = Lifestage, y = alpha)) +
labs(y = "Shannon Alpha Diversity") +
geom_boxplot() +
scale_x_discrete(labels=c(paste("Adult (n=", table(metadata_fil_alpha$Lifestage)[1], ")"),
paste("Tadpole (n=", table(metadata_fil_alpha$Lifestage)[2], ")")))
pdf(p_lifestage, "Lifestage_box.pdf", width = 14, height = 7, paper = "a4r")
dev.off()
p_lifestage <- ggplot(metadata_fil,
aes(x = Lifestage, y = alpha)) +
labs(y = "Shannon Alpha Diversity") +
geom_boxplot() +
scale_x_discrete(labels=c(paste("Adult (n=", table(metadata_fil_alpha$Lifestage)[1], ")"),
paste("Tadpole (n=", table(metadata_fil_alpha$Lifestage)[2], ")")))
pdf(p_lifestage, "Lifestage_box.pdf", width = 14, height = 7, paper = "a4r")
dev.off()
pdf("Lifestage_box.pdf", width = 14, height = 7, paper = "a4r")
p_lifestage
dev.off()
pdf("Lifestage_box.pdf")
p_lifestage
dev.off()
View(metadata_fil_alpha)
View(metadata_fil)
View(metadata_fil)
# plot a violin plot with Bd comparison
ggplot(metadata_fil, aes(x = Lifestage, y = alpha, colour = Bd)) +
geom_violin()
# plot box plot with Bd comparison
ggplot(metadata_fil, aes(x = Lifestage, y = alpha, colour = Bd)) +
geom_boxplot()
ggplot(metadata_fil, aes(x = Age, y = alpha, colour = Bd)) +
geom_boxplot()
ggplot(metadata_fil, aes(x = Species, y = alpha, colour = Bd)) +
geom_boxplot()
ggplot(metadata_fil, aes(x = Species, y = alpha)) +
geom_boxplot()
ggplot(metadata_fil, aes(x = Species, y = alpha)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p_species_box <- ggplot(metadata_fil, aes(x = Species, y = alpha)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
pdf("Lifestage_box.pdf")
p_species_box
dev.off()
p_species_box <- ggplot(metadata_fil, aes(x = Species, y = alpha)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
pdf("Species_box.pdf")
p_species_box
dev.off()
# plot box plot
p_lifestage_box <- ggplot(metadata_fil,
aes(x = Lifestage, y = alpha)) +
labs(y = "Shannon Alpha Diversity") +
geom_boxplot() +
scale_x_discrete(labels=c(paste("Adult (n=", table(metadata_fil_alpha$Lifestage)[1], ")"),
paste("Tadpole (n=", table(metadata_fil_alpha$Lifestage)[2], ")")))
pdf("Lifestage_box.pdf")
p_lifestage_box
dev.off()
ggplot(metadata_fil, aes(x = Bd, y = alpha)) +
geom_boxplot()
# perform Mann-Whitney U test
wilcox.test(alpha ~ Lifestage, data = metadata_fil_alpha)
p_lifestage_box
View(metadata_fil_alpha)
physeq.ord <- ordinate(physeq_fil, "NMDS", "bray")
plot_ordination(physeq_fil, physeq.ord, type="samples", color="Bd", title="taxa")
View(physeq)
View(physeq.ord)
physeq.ord$points
physeq.ord$points[,2]
physeq.ord$points[,1]
physeq.ord$points[,1] < -1
physeq.ord$points[physeq.ord$points[,1] < -1]
row.names(physeq.ord$points[physeq.ord$points[,1] < -1])
# subset all info and save as separate dataframe
info <- TWdata[,1:22]
# subset samples only and save as matrix
samp_only <- as.matrix(TWdata[,23:ncol(TWdata)])
# add OTU ids as row names
rownames(samp_only) <- TWdata$otuid
# sum all read columns and save as vector
sampsum <- colSums(samp_only)
# filter by sums not equal to zero
samp_only <- samp_only[,sampsum > 10]
# subset taxa only and save as matrix
tax_data <- as.matrix(TWdata[,10:16])
# add OTU ids as row names
rownames(tax_data) <- TWdata$otuid
# convert sample and taxa matrices into the tables needed
# to create a phyloseq object
OTU <- otu_table(samp_only, taxa_are_rows = TRUE)
TAX <- tax_table(tax_data)
Sample <- sample_data(metadata)
# combine tables into one phyloseq object
physeq <- phyloseq(OTU,TAX, Sample)
physeq.ord <- ordinate(physeq, "NMDS", "bray")
plot_ordination(physeq, physeq.ord, type="samples", color="Bd", title="taxa")
physeq.ord <- ordinate(physeq, "NMDS", "bray")
plot_ordination(physeq, physeq.ord, type="samples", color="Bd", title="taxa")
##############################################################################
###################### Prelimary Taiwan Data Analysis ########################
##############################################################################
# Author: Lucy Goodyear (lucy.goodyear19@imperial.ac.uk)
# Version: 0.0.1
# clear workspace
rm(list=ls())
################################## Set up ####################################
# set wd if needed
setwd("~/Documents/CMEECourseWork/Project/Data_Scripts/Taiwan_Vietnam/")
# load packages
library(dplyr)
library(phyloseq)
library(ggplot2)
# load filtered Taiwan data (swbas only)
TWdata <- read.csv("Filtering/Taiwanswabsonly_plate2-4_filteredOTUtable.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
# load plate data
plates <- read.csv("TW16_plate_data.csv",
stringsAsFactor=F,
header=F)
names(plates) <- c("barcode","sample","DNAqual","plate")
# load metadata
metadata <- read.csv("TW16_metadata.csv",
stringsAsFactor=F,
header=T)
rownames(metadata) <- metadata$miseq_id
metadata <- metadata[,-1]
# add column for Bd +ve/-ve to metadata
metadata$Bd <- 0
for (i in (1:nrow(metadata))){
if (metadata$qPCR[i] > 0){
metadata$Bd[i] <- 1
}
}
# set as factor for plotting
metadata$Bd <- as.factor(metadata$Bd)
###################### Create phyloseq object of all data #####################
# subset all info and save as separate dataframe
info <- TWdata[,1:22]
# subset samples only and save as matrix
samp_only <- as.matrix(TWdata[,23:ncol(TWdata)])
# add OTU ids as row names
rownames(samp_only) <- TWdata$otuid
# sum all read columns and save as vector
sampsum <- colSums(samp_only)
# filter by sums not equal to zero
samp_only <- samp_only[,sampsum > 10]
# subset taxa only and save as matrix
tax_data <- as.matrix(TWdata[,10:16])
# add OTU ids as row names
rownames(tax_data) <- TWdata$otuid
# convert sample and taxa matrices into the tables needed
# to create a phyloseq object
OTU <- otu_table(samp_only, taxa_are_rows = TRUE)
TAX <- tax_table(tax_data)
Sample <- sample_data(metadata)
# combine tables into one phyloseq object
physeq <- phyloseq(OTU,TAX, Sample)
############## Create phyloseq object of phyla subsetted data ##########
# create another subset with certain phyla removed
# remove all OTUs of the followng phlya:
# - "" (blank)
# - "environmental samples"
# - "Fungi_phy_Incertae_sedis"
phy_fil <- TWdata %>%
filter(phylum != ""
& phylum != "environmental samples"
& phylum != "Fungi_phy_Incertae_sedis")
# subset samples only and save as matrix
phy_fil_samp <- as.matrix(phy_fil[,23:ncol(phy_fil)])
# add OTU ids as row names
rownames(phy_fil_samp) <- phy_fil$otuid
# subset all info and save as separate dataframe
info_fil <- phy_fil[,1:22]
# subset taxa only and save as matrix
phy_fil_tax <- as.matrix(phy_fil[,10:16])
# add OTU ids as row names
rownames(phy_fil_tax) <- phy_fil$otuid
# check to see if there samples with no OTUs
# sum all read columns and save as vector
#sampsum <- colSums(phy_fil_samp)
# filter by sums not equal to zero
#phy_fil_samp1 <- phy_fil_samp[,sampsum != 0]
# filter metdata by IDs present in current MiSeq run
metadata_fil <- metadata[rownames(metadata) %in% colnames(phy_fil_samp),]
# convert sample and taxa matrices into the tables needed
# to create a phyloseq object
OTU_fil <- otu_table(phy_fil_samp, taxa_are_rows = TRUE)
TAX_fil <- tax_table(phy_fil_tax)
Sample_fil <- sample_data(metadata_fil)
# combine tables into one phyloseq object
physeq_fil <- phyloseq(OTU_fil,TAX_fil, Sample_fil)
############################# Filter data ###############################
#plot_bar(physeq_fil, fill = "phylum")
wh0 = genefilter_sample(physeq_fil, filterfun_sample(function(x) x > 1), A=0.05*nsamples(physeq_fil))
TW_physeq_filtered = prune_taxa(wh0, physeq_fil)
# estimate value for alpha for each sample
est_alpha_shannon <- estimate_richness(physeq_fil, split = TRUE, measures = "Shannon")
metadata_fil$alpha <- est_alpha_shannon[,1]
# subset Sample_fil twice to include only shannon diversity,
# split by altitude
metadata_fil_alpha_alt <- as.data.frame(metadata_fil %>% select(alpha, Altitude_m))
# perform Mann-Whitney U test
wilcox.test(alpha ~ Altitude_m, data = metadata_fil_alpha_life)
# perform Mann-Whitney U test
wilcox.test(alpha ~ Altitude_m, data = metadata_fil_alpha_alt)
##### Bd +ve/-ve
# subset Sample_fil twice to include only shannon diversity,
# split by altitude
metadata_fil_alpha_bd <- as.data.frame(metadata_fil %>% select(alpha, Bd))
# perform Mann-Whitney U test
wilcox.test(alpha ~ Bd data = metadata_fil_alpha_bd)
# plot box plot
p_bd_box <- ggplot(metadata_fil,
aes(x = Bd, y = alpha)) +
labs(y = "Shannon Alpha Diversity") +
geom_boxplot()
#scale_x_discrete(labels=c(paste("Adult (n=", table(metadata_fil_alpha$Lifestage)[1], ")"),
#                          paste("Tadpole (n=", table(metadata_fil_alpha$Lifestage)[2], ")")))
pdf("Bd_box.pdf")
p_bd_box
dev.off()
# perform Mann-Whitney U test
wilcox.test(alpha ~ Bd, data = metadata_fil_alpha_bd)
