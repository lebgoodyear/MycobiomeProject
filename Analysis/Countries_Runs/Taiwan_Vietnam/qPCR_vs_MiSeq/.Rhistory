library(ggplot2)
library(scales)
# load required functions
source("qPCR_vs_MiSeq_functions.R")
# load filtered Taiwan data (swabs only)
TWdata <- read.csv("../Filtering/Taiwanswabsonly_plate2-4_filteredOTUtable.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
# load plate data
plates <- read.csv("../TW16_plate_data.csv",
stringsAsFactor=F,
header=F)
names(plates) <- c("barcode","sample","DNAqual","plate")
# load qPCR data
qpcr <- read.csv("../TW16_metadata.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
###################### qpcr data filtering #######################
# add column for Bd +ve/-ve to qpcr
qpcr$bd_results <- 0
for (i in (1:nrow(qpcr))){
if (qpcr$qPCR[i] > 0){
qpcr$bd_results[i] <- 1
}
}
# set as factor for plotting
qpcr$bd_results <- as.factor(qpcr$bd_results)
# subset qpcr results to include only id and bd_results
qpcr_Bd <- qpcr %>% select(miseq_id, bd_results)
names(qpcr_Bd)[1] = c("id")
##################### miseq data filtering ######################
# filter OTU table by Bd only and remove meta data
miseq_Bd <- TWdata[TWdata$species == "Batrachochytrium_dendrobatidis",]
miseq_Bd <- miseq_Bd[,23:ncol(miseq_Bd)]
################# qpcr/miseq data preparation ###################
# filter Bd only OTU table by samples with qpcr measurement
samples_miseq_qpcr <- miseq_Bd[,names(miseq_Bd) %in% c(qpcr_Bd$id)]
# create new dataframe with overlapping ids as first column
samples_Bd <- data.frame(names(samples_miseq_qpcr))
# add columns for total Bd count per sample and qpcr Bd boolean (1-0)
samples_Bd <- cbind(samples_Bd,
colSums(samples_miseq_qpcr),
qpcr_Bd[qpcr_Bd$id %in% names(samples_miseq_qpcr),2])
# set column names
names(samples_Bd) <- c("id", "miseq", "qpcr")
samples_Bd$qpcr <- as.factor(samples_Bd$qpcr) # for plotting purposes
####################### Plotting data ########################
###### plotting overall data set
# remove all 0-0 matches for plotting
samples_Bd_plot <- samples_Bd[samples_Bd$qpcr != 0 | samples_Bd$miseq != 0,]
samples_Bd_plot$labels <- gsub("TW16", "", samples_Bd_plot$id)
# plot miseq vs qpcr
plot_all <- qplot(labels, miseq, data = samples_Bd_plot,
xlab = "Sample ID",
ylab = "MiSeq count",
main = paste("MiSeq and qPCR Bd reads by sample (n =", nrow(samples_Bd), ")"),
colour = qpcr) +
theme_bw() +
annotate(geom="text", x=55, y=1300,
label=paste(percent(total_match(samples_Bd)),
"total matches\n",
percent(total_match100(samples_Bd)),
"total matches if MiSeq reads < 100 are assumed 0\n",
percent(qpcr_miseq_zero(samples_Bd)),
"total qPCR-/MiSeq- matches (not displayed)\n",
percent(qpcr_neg_miseq_pos(samples_Bd)/nrow(samples_Bd)),
"(",qpcr_neg_miseq_pos(samples_Bd), "samples)",
"qPCR-/MiSeq+ for all reads\n",
percent(qpcr_neg_miseq_pos100(samples_Bd)/nrow(samples_Bd)),
"(",qpcr_neg_miseq_pos100(samples_Bd), "samples)",
"qPCR-/MiSeq+ if MiSeq reads < 100 are assumed 0"),
color="black", cex = 4, hjust = 0) +
scale_colour_discrete(name = "qPCR", labels = c("Bd-", "Bd+"))
###### plotting by plate
# subset data by plate
samples_Bd_plate2 <- samples_Bd[samples_Bd$id %in% c(plates$sample[plates$plate == "plate2"]),]
samples_Bd_plate3 <- samples_Bd[samples_Bd$id %in% c(plates$sample[plates$plate == "plate3"]),]
samples_Bd_plate4 <- samples_Bd[samples_Bd$id %in% c(plates$sample[plates$plate == "plate4"]),]
### plate 2
# remove all 0-0 matches for plotting
samples_Bd_plate2_plot <- samples_Bd_plate2[samples_Bd_plate2$qpcr != 0 | samples_Bd_plate2$miseq != 0,]
samples_Bd_plate2_plot$labels <- gsub("TW16", "", samples_Bd_plate2_plot$id)
# plot miseq vs qpcr by plate
plot_plate2 <- qplot(labels, miseq, data = samples_Bd_plate2_plot,
xlab = "Sample ID",
ylab = "MiSeq count",
main = paste("Plate 2: MiSeq and qPCR Bd reads by sample (n =", nrow(samples_Bd_plate2), ")"),
colour = qpcr) +
theme_bw() +
annotate(geom="text", x=5, y=1300,
label=paste(percent(total_match(samples_Bd_plate2)),
"total matches\n",
percent(total_match100(samples_Bd_plate2)),
"total matches if MiSeq reads < 100 are assumed 0\n",
percent(qpcr_miseq_zero(samples_Bd_plate2)),
"total qPCR-/MiSeq- matches (not displayed)\n",
percent(qpcr_neg_miseq_pos(samples_Bd_plate2)/nrow(samples_Bd_plate2)),
"(",qpcr_neg_miseq_pos(samples_Bd_plate2), "samples)",
"qPCR-/MiSeq+ for all reads\n",
percent(qpcr_neg_miseq_pos100(samples_Bd_plate2)/nrow(samples_Bd_plate2)),
"(",qpcr_neg_miseq_pos100(samples_Bd_plate2), "samples)",
"qPCR-/MiSeq+ if MiSeq reads < 100 are assumed 0"),
color="black", cex = 4, hjust = 0) +
scale_colour_discrete(name = "qPCR", labels = c("Bd-", "Bd+"))
### plate 3
# remove all 0-0 matches for plotting
samples_Bd_plate3_plot <- samples_Bd_plate3[samples_Bd_plate3$qpcr != 0 | samples_Bd_plate3$miseq != 0,]
samples_Bd_plate3_plot$labels <- gsub("TW16", "", samples_Bd_plate3_plot$id)
# plot miseq vs qpcr by plate
plot_plate3 <- qplot(labels, miseq, data = samples_Bd_plate3_plot,
xlab = "Sample ID",
ylab = "MiSeq count",
main = paste("Plate 3: MiSeq and qPCR Bd reads by sample (n =", nrow(samples_Bd_plate3), ")"),
colour = qpcr) +
theme_bw() +
annotate(geom="text", x=9, y=30,
label=paste(percent(total_match(samples_Bd_plate3)),
"total matches\n",
percent(total_match100(samples_Bd_plate3)),
"total matches if MiSeq reads < 100 are assumed 0 \n",
percent(qpcr_miseq_zero(samples_Bd_plate3)),
"total qPCR-/MiSeq- matches (not displayed)\n",
percent(qpcr_neg_miseq_pos(samples_Bd_plate3)/nrow(samples_Bd_plate3)),
"(",qpcr_neg_miseq_pos(samples_Bd_plate3), "samples)",
"qPCR-/MiSeq+ for all reads\n",
percent(qpcr_neg_miseq_pos100(samples_Bd_plate3)/nrow(samples_Bd_plate3)),
"(",qpcr_neg_miseq_pos100(samples_Bd_plate3), "samples)",
"qPCR-/MiSeq+ if MiSeq reads < 100 are assumed 0"),
color="black", cex = 4, hjust = 0) +
scale_colour_discrete(name = "qPCR", labels = c("Bd-", "Bd+"))
### plate 4
# remove all 0-0 matches for plotting
samples_Bd_plate4_plot <- samples_Bd_plate4[samples_Bd_plate4$qpcr != 0 | samples_Bd_plate4$miseq != 0,]
samples_Bd_plate4_plot$labels <- gsub("TW16", "", samples_Bd_plate4_plot$id)
# plot miseq vs qpcr by plate
plot_plate4 <- qplot(labels, miseq, data = samples_Bd_plate4_plot,
xlab = "Sample ID",
ylab = "MiSeq count",
main = paste("Plate 4: MiSeq and qPCR Bd reads by sample (n =", nrow(samples_Bd_plate4), ")"),
colour = qpcr) +
theme_bw() +
annotate(geom="text", x=5, y=450,
label=paste(percent(total_match(samples_Bd_plate4)),
"total matches\n",
percent(total_match100(samples_Bd_plate4)),
"total matches if MiSeq reads < 100 are assumed 0 \n",
percent(qpcr_miseq_zero(samples_Bd_plate4)),
"total qPCR-/MiSeq- matches (not displayed)\n",
percent(qpcr_neg_miseq_pos(samples_Bd_plate4)/nrow(samples_Bd_plate4)),
"(",qpcr_neg_miseq_pos(samples_Bd_plate4), "samples)",
"qPCR-/MiSeq+ for all reads\n",
percent(qpcr_neg_miseq_pos100(samples_Bd_plate4)/nrow(samples_Bd_plate4)),
"(",qpcr_neg_miseq_pos100(samples_Bd_plate4), "samples)",
"qPCR-/MiSeq+ if MiSeq reads < 100 are assumed 0"),
color="black", cex = 4, hjust = 0) +
scale_colour_discrete(name = "qPCR", labels = c("Bd-", "Bd+"))
# save resulting plots as pdfs for review
pdf("qpcr_vs_miseq_all.pdf", width = 14, height = 7, paper = "a4r")
plot_all
dev.off()
pdf("qpcr_vs_miseq_plate2.pdf", width = 14, height = 7, paper = "a4r")
plot_plate2
dev.off()
pdf("qpcr_vs_miseq_plate3.pdf", width = 14, height = 7, paper = "a4r")
plot_plate3
dev.off()
pdf("qpcr_vs_miseq_plate4.pdf", width = 14, height = 7, paper = "a4r")
plot_plate4
dev.off()
#######################################################################
###################### Taiwan Bd qPCR vs MiSeq ########################
#######################################################################
# Author: Lucy Goodyear (lucy.goodyear19@imperial.ac.uk)
# Version: 0.0.1
# clear workspace
rm(list=ls())
############# initial set up, library and data loading ################
# set wd if needed
setwd("Documents/CMEECourseWork/Project/Data-scripts/Taiwan_Vietnam/qPCR_vs_MiSeq")
# load packages
library(dplyr)
library(ggplot2)
library(scales)
# load required functions
source("qPCR_vs_MiSeq_functions.R")
# load filtered Taiwan data (swabs only)
TWdata <- read.csv("../Filtering/Taiwanswabsonly_plate2-4_filteredOTUtable.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
# load plate data
plates <- read.csv("../TW16_plate_data.csv",
stringsAsFactor=F,
header=F)
names(plates) <- c("barcode","sample","DNAqual","plate")
# load qPCR data
qpcr <- read.csv("../TW_full_qpcr_data.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
###################### qpcr data filtering #######################
# remove underscores in qpcr sample names to match MiSeq data
qpcr$id <- gsub("_", "", qpcr$id)
# subset qpcr results to include only id and bd_results
qpcr_Bd <- qpcr %>% select(id, bd_results)
##################### miseq data filtering ######################
# filter OTU table by Bd only and remove meta data
miseq_Bd <- TWdata[TWdata$species == "Batrachochytrium_dendrobatidis",]
miseq_Bd <- miseq_Bd[,23:ncol(miseq_Bd)]
################# qpcr/miseq data preparation ###################
# filter Bd only OTU table by samples with qpcr measurement
samples_miseq_qpcr <- miseq_Bd[,names(miseq_Bd) %in% c(qpcr_Bd$id)]
# create new dataframe with overlapping ids as first column
samples_Bd <- data.frame(names(samples_miseq_qpcr))
# add columns for total Bd count per sample and qpcr Bd boolean (1-0)
samples_Bd <- cbind(samples_Bd,
colSums(samples_miseq_qpcr),
qpcr_Bd[qpcr_Bd$id %in% names(samples_miseq_qpcr),2])
# set column names
names(samples_Bd) <- c("id", "miseq", "qpcr")
samples_Bd$qpcr <- as.factor(samples_Bd$qpcr) # for plotting purposes
####################### Plotting data ########################
###### plotting overall data set
# remove all 0-0 matches for plotting
samples_Bd_plot <- samples_Bd[samples_Bd$qpcr != 0 | samples_Bd$miseq != 0,]
samples_Bd_plot$labels <- gsub("TW16", "", samples_Bd_plot$id)
# plot miseq vs qpcr
plot_all <- qplot(labels, miseq, data = samples_Bd_plot,
xlab = "Sample ID",
ylab = "MiSeq count",
main = paste("MiSeq and qPCR Bd reads by sample (n =", nrow(samples_Bd), ")"),
colour = qpcr) +
theme_bw() +
annotate(geom="text", x=55, y=1300,
label=paste(percent(total_match(samples_Bd)),
"total matches\n",
percent(total_match100(samples_Bd)),
"total matches if MiSeq reads < 100 are assumed 0\n",
percent(qpcr_miseq_zero(samples_Bd)),
"total qPCR-/MiSeq- matches (not displayed)\n",
percent(qpcr_neg_miseq_pos(samples_Bd)/nrow(samples_Bd)),
"(",qpcr_neg_miseq_pos(samples_Bd), "samples)",
"qPCR-/MiSeq+ for all reads\n",
percent(qpcr_neg_miseq_pos100(samples_Bd)/nrow(samples_Bd)),
"(",qpcr_neg_miseq_pos100(samples_Bd), "samples)",
"qPCR-/MiSeq+ if MiSeq reads < 100 are assumed 0"),
color="black", cex = 4, hjust = 0) +
scale_colour_discrete(name = "qPCR", labels = c("Bd-", "Bd+"))
###### plotting by plate
# subset data by plate
samples_Bd_plate2 <- samples_Bd[samples_Bd$id %in% c(plates$sample[plates$plate == "plate2"]),]
samples_Bd_plate3 <- samples_Bd[samples_Bd$id %in% c(plates$sample[plates$plate == "plate3"]),]
samples_Bd_plate4 <- samples_Bd[samples_Bd$id %in% c(plates$sample[plates$plate == "plate4"]),]
### plate 2
# remove all 0-0 matches for plotting
samples_Bd_plate2_plot <- samples_Bd_plate2[samples_Bd_plate2$qpcr != 0 | samples_Bd_plate2$miseq != 0,]
samples_Bd_plate2_plot$labels <- gsub("TW16", "", samples_Bd_plate2_plot$id)
# plot miseq vs qpcr by plate
plot_plate2 <- qplot(labels, miseq, data = samples_Bd_plate2_plot,
xlab = "Sample ID",
ylab = "MiSeq count",
main = paste("Plate 2: MiSeq and qPCR Bd reads by sample (n =", nrow(samples_Bd_plate2), ")"),
colour = qpcr) +
theme_bw() +
annotate(geom="text", x=5, y=1300,
label=paste(percent(total_match(samples_Bd_plate2)),
"total matches\n",
percent(total_match100(samples_Bd_plate2)),
"total matches if MiSeq reads < 100 are assumed 0\n",
percent(qpcr_miseq_zero(samples_Bd_plate2)),
"total qPCR-/MiSeq- matches (not displayed)\n",
percent(qpcr_neg_miseq_pos(samples_Bd_plate2)/nrow(samples_Bd_plate2)),
"(",qpcr_neg_miseq_pos(samples_Bd_plate2), "samples)",
"qPCR-/MiSeq+ for all reads\n",
percent(qpcr_neg_miseq_pos100(samples_Bd_plate2)/nrow(samples_Bd_plate2)),
"(",qpcr_neg_miseq_pos100(samples_Bd_plate2), "samples)",
"qPCR-/MiSeq+ if MiSeq reads < 100 are assumed 0"),
color="black", cex = 4, hjust = 0) +
scale_colour_discrete(name = "qPCR", labels = c("Bd-", "Bd+"))
### plate 3
# remove all 0-0 matches for plotting
samples_Bd_plate3_plot <- samples_Bd_plate3[samples_Bd_plate3$qpcr != 0 | samples_Bd_plate3$miseq != 0,]
samples_Bd_plate3_plot$labels <- gsub("TW16", "", samples_Bd_plate3_plot$id)
# plot miseq vs qpcr by plate
plot_plate3 <- qplot(labels, miseq, data = samples_Bd_plate3_plot,
xlab = "Sample ID",
ylab = "MiSeq count",
main = paste("Plate 3: MiSeq and qPCR Bd reads by sample (n =", nrow(samples_Bd_plate3), ")"),
colour = qpcr) +
theme_bw() +
annotate(geom="text", x=9, y=30,
label=paste(percent(total_match(samples_Bd_plate3)),
"total matches\n",
percent(total_match100(samples_Bd_plate3)),
"total matches if MiSeq reads < 100 are assumed 0 \n",
percent(qpcr_miseq_zero(samples_Bd_plate3)),
"total qPCR-/MiSeq- matches (not displayed)\n",
percent(qpcr_neg_miseq_pos(samples_Bd_plate3)/nrow(samples_Bd_plate3)),
"(",qpcr_neg_miseq_pos(samples_Bd_plate3), "samples)",
"qPCR-/MiSeq+ for all reads\n",
percent(qpcr_neg_miseq_pos100(samples_Bd_plate3)/nrow(samples_Bd_plate3)),
"(",qpcr_neg_miseq_pos100(samples_Bd_plate3), "samples)",
"qPCR-/MiSeq+ if MiSeq reads < 100 are assumed 0"),
color="black", cex = 4, hjust = 0) +
scale_colour_discrete(name = "qPCR", labels = c("Bd-", "Bd+"))
### plate 4
# remove all 0-0 matches for plotting
samples_Bd_plate4_plot <- samples_Bd_plate4[samples_Bd_plate4$qpcr != 0 | samples_Bd_plate4$miseq != 0,]
samples_Bd_plate4_plot$labels <- gsub("TW16", "", samples_Bd_plate4_plot$id)
# plot miseq vs qpcr by plate
plot_plate4 <- qplot(labels, miseq, data = samples_Bd_plate4_plot,
xlab = "Sample ID",
ylab = "MiSeq count",
main = paste("Plate 4: MiSeq and qPCR Bd reads by sample (n =", nrow(samples_Bd_plate4), ")"),
colour = qpcr) +
theme_bw() +
annotate(geom="text", x=5, y=450,
label=paste(percent(total_match(samples_Bd_plate4)),
"total matches\n",
percent(total_match100(samples_Bd_plate4)),
"total matches if MiSeq reads < 100 are assumed 0 \n",
percent(qpcr_miseq_zero(samples_Bd_plate4)),
"total qPCR-/MiSeq- matches (not displayed)\n",
percent(qpcr_neg_miseq_pos(samples_Bd_plate4)/nrow(samples_Bd_plate4)),
"(",qpcr_neg_miseq_pos(samples_Bd_plate4), "samples)",
"qPCR-/MiSeq+ for all reads\n",
percent(qpcr_neg_miseq_pos100(samples_Bd_plate4)/nrow(samples_Bd_plate4)),
"(",qpcr_neg_miseq_pos100(samples_Bd_plate4), "samples)",
"qPCR-/MiSeq+ if MiSeq reads < 100 are assumed 0"),
color="black", cex = 4, hjust = 0) +
scale_colour_discrete(name = "qPCR", labels = c("Bd-", "Bd+"))
# save resulting plots as pdfs for review
pdf("qpcr_vs_miseq_all_Dirk.pdf", width = 14, height = 7, paper = "a4r")
plot_all
dev.off()
pdf("qpcr_vs_miseq_plate2_Dirk.pdf", width = 14, height = 7, paper = "a4r")
plot_plate2
dev.off()
pdf("qpcr_vs_miseq_plate3_Dirk.pdf", width = 14, height = 7, paper = "a4r")
plot_plate3
dev.off()
pdf("qpcr_vs_miseq_plate4_Dirk.pdf", width = 14, height = 7, paper = "a4r")
plot_plate4
dev.off()
#######################################################################
###################### Taiwan Bd qPCR vs MiSeq ########################
#######################################################################
# Author: Lucy Goodyear (lucy.goodyear19@imperial.ac.uk)
# Version: 0.0.1
# clear workspace
rm(list=ls())
############# initial set up, library and data loading ################
# set wd if needed
setwd("Documents/CMEECourseWork/Project/Data-scripts/Taiwan_Vietnam/qPCR_vs_MiSeq")
# load packages
library(dplyr)
library(ggplot2)
library(scales)
# load required functions
source("qPCR_vs_MiSeq_functions.R")
# load filtered Taiwan data (swabs only)
TWdata <- read.csv("../Filtering/Taiwanswabsonly_plate2-4_filteredOTUtable.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
# load plate data
plates <- read.csv("../TW16_plate_data.csv",
stringsAsFactor=F,
header=F)
names(plates) <- c("barcode","sample","DNAqual","plate")
# load qPCR data
qpcr <- read.csv("../TW16_metadata.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
###################### qpcr data filtering #######################
# add column for Bd +ve/-ve to qpcr
qpcr$bd_results <- 0
for (i in (1:nrow(qpcr))){
if (qpcr$qPCR[i] > 0){
qpcr$bd_results[i] <- 1
}
}
# set as factor for plotting
qpcr$bd_results <- as.factor(qpcr$bd_results)
# subset qpcr results to include only id and bd_results
qpcr_Bd <- qpcr %>% select(miseq_id, bd_results)
names(qpcr_Bd)[1] = c("id")
##################### miseq data filtering ######################
# filter OTU table by Bd only and remove meta data
miseq_Bd <- TWdata[TWdata$species == "Batrachochytrium_dendrobatidis",]
miseq_Bd <- miseq_Bd[,23:ncol(miseq_Bd)]
################# qpcr/miseq data preparation ###################
# filter Bd only OTU table by samples with qpcr measurement
samples_miseq_qpcr <- miseq_Bd[,names(miseq_Bd) %in% c(qpcr_Bd$id)]
# create new dataframe with overlapping ids as first column
samples_Bd <- data.frame(names(samples_miseq_qpcr))
# add columns for total Bd count per sample and qpcr Bd boolean (1-0)
samples_Bd <- cbind(samples_Bd,
colSums(samples_miseq_qpcr),
qpcr_Bd[qpcr_Bd$id %in% names(samples_miseq_qpcr),2])
# set column names
names(samples_Bd) <- c("id", "miseq", "qpcr")
samples_Bd$qpcr <- as.factor(samples_Bd$qpcr) # for plotting purposes
View(qpcr)
View(miseq_Bd)
View(qpcr)
View(miseq_Bd)
##############################################################################
###################### Prelimary Taiwan Data Analysis ########################
##############################################################################
# Author: Lucy Goodyear (lucy.goodyear19@imperial.ac.uk)
# Version: 0.0.1
# clear workspace
rm(list=ls())
################################## Set up ####################################
# set wd if needed
setwd("Documents/CMEECourseWork/Project/Data-scripts/Taiwan_Vietnam/")
# load packages
library(dplyr)
library(phyloseq)
library(ggplot2)
# load filtered Taiwan data (swbas only)
TWdata <- read.csv("Filtering/Taiwanswabsonly_plate2-4_filteredOTUtable.csv",
header=T,
stringsAsFactor=FALSE,
check.names = F)
# load plate data
plates <- read.csv("TW16_plate_data.csv",
stringsAsFactor=F,
header=F)
names(plates) <- c("barcode","sample","DNAqual","plate")
# load metadata
metadata <- read.csv("TW16_metadata.csv",
stringsAsFactor=F,
header=T)
rownames(metadata) <- metadata$miseq_id
metadata <- metadata[,-1]
# add column for Bd +ve/-ve to metadata
metadata$Bd <- 0
for (i in (1:nrow(metadata))){
if (metadata$qPCR[i] > 0){
metadata$Bd[i] <- 1
}
}
# set as factor for plotting
metadata$Bd <- as.factor(metadata$Bd)
###################### Create phyloseq object of all data #####################
# subset all info and save as separate dataframe
info <- TWdata[,1:22]
# subset samples only and save as matrix
samp_only <- as.matrix(TWdata[,23:ncol(TWdata)])
# add OTU ids as row names
rownames(samp_only) <- TWdata$otuid
# subset taxa only and save as matrix
tax_data <- as.matrix(TWdata[,10:16])
# add OTU ids as row names
rownames(tax_data) <- TWdata$otuid
# convert sample and taxa matrices into the tables needed
# to create a phyloseq object
OTU <- otu_table(samp_only, taxa_are_rows = TRUE)
TAX <- tax_table(tax_data)
Sample <- sample_data(metadata)
# combine tables into one phyloseq object
physeq <- phyloseq(OTU,TAX, Sample)
############## Create phyloseq object of phyla subsetted data ##########
# create another subset with certain phyla removed
# remove all OTUs of the followng phlya:
# - "" (blank)
# - "environmental samples"
# - "Fungi_phy_Incertae_sedis"
phy_fil <- TWdata %>%
filter(phylum != ""
& phylum != "environmental samples"
& phylum != "Fungi_phy_Incertae_sedis")
# subset samples only and save as matrix
phy_fil_samp <- as.matrix(phy_fil[,23:ncol(phy_fil)])
# add OTU ids as row names
rownames(phy_fil_samp) <- phy_fil$otuid
# subset all info and save as separate dataframe
info_fil <- phy_fil[,1:22]
# subset taxa only and save as matrix
phy_fil_tax <- as.matrix(phy_fil[,10:16])
# add OTU ids as row names
rownames(phy_fil_tax) <- phy_fil$otuid
# check to see if there samples with no OTUs
# sum all read columns and save as vector
#sampsum <- colSums(phy_fil_samp)
# filter by sums not equal to zero
#phy_fil_samp1 <- phy_fil_samp[,sampsum != 0]
# filter metdata by IDs present in current MiSeq run
metadata_fil <- metadata[rownames(metadata) %in% colnames(phy_fil_samp),]
# convert sample and taxa matrices into the tables needed
# to create a phyloseq object
OTU_fil <- otu_table(phy_fil_samp, taxa_are_rows = TRUE)
TAX_fil <- tax_table(phy_fil_tax)
Sample_fil <- sample_data(metadata_fil)
# combine tables into one phyloseq object
physeq_fil <- phyloseq(OTU_fil,TAX_fil, Sample_fil)
############################# Filter data ###############################
#plot_bar(physeq_fil, fill = "phylum")
wh0 = genefilter_sample(physeq_fil, filterfun_sample(function(x) x > 1), A=0.05*nsamples(physeq_fil))
TW_physeq_filtered = prune_taxa(wh0, physeq_fil)
#phylum.sum = tapply(taxa_sums(TW_physeq_filtered), tax_table(TW_physeq_filtered)[, "Phylum"], sum, na.rm=TRUE)
#top5phyla = names(sort(phylum.sum, TRUE))[1:5]
#TW_physeq_filtered = prune_taxa((tax_table(TW_physeq_filtered)[, "Phylum"] %in% top5phyla), TW_physeq_filtered)
######################## Plot alpha-diversity ############################
# estimate value for alpha for each sample
est_alpha_shannon <- estimate_richness(physeq_fil, split = TRUE, measures = "Shannon")
metadata_fil$alpha <- est_alpha_shannon[,1]
